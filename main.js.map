{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/utils/constants.ts","webpack://my-webpack-project/./src/index.ts","webpack://my-webpack-project/./src/components/Page.ts","webpack://my-webpack-project/./src/components/ToDoModel.ts","webpack://my-webpack-project/./src/components/Popup.ts","webpack://my-webpack-project/./src/components/ToDoPresenter.ts","webpack://my-webpack-project/./src/components/Form.ts","webpack://my-webpack-project/./src/components/Item.ts"],"sourcesContent":["export const todos = [\n    { id: \"1\", name: 'Сделать проектную работу' },\n    { id: \"2\", name: 'Полить цветы' },\n    { id: \"3\", name: 'Пройти туториал по Реакту' },\n    { id: \"4\", name: 'Сделать фронт для своего проекта' },\n    { id: \"5\", name: 'Погулять с собакой' },\n    { id: \"6\", name: 'Разобраться в замыканиях' },\n    { id: \"7\", name: 'Решить задачу на Codewars' },\n];\n","import { Form } from \"./components/Form\";\nimport { Item } from \"./components/Item\";\nimport { Page } from \"./components/Page\";\nimport { Popup } from \"./components/Popup\";\nimport { ToDoModel } from \"./components/ToDoModel\";\nimport { ItemPresenter } from \"./components/ToDoPresenter\";\nimport \"./styles/styles.css\";\nimport { todos } from \"./utils/constants\";\nconst contentElement = document.querySelector('.content');\nconst popupElement = document.querySelector('.popup');\nconst itemContainer = new Page(contentElement);\nconst todoArray = new ToDoModel();\ntodoArray.items = todos;\nconst modal = new Popup(popupElement);\nconst itemPresenter = new ItemPresenter(todoArray, Form, itemContainer, Item, modal);\nitemPresenter.init();\nitemPresenter.renderView();\n","export class Page {\n    constructor(container) {\n        this.container = container;\n        this._formContainer = this.container.querySelector('.todo-form-container');\n        this._todoContainer = this.container.querySelector('.todos__list');\n    }\n    set todoContainer(items) {\n        this._todoContainer.replaceChildren(...items);\n    }\n    set formContainer(formElement) {\n        if (formElement) {\n            this._formContainer.replaceChildren(formElement);\n        }\n        else {\n            this._formContainer.innerHTML = '';\n        }\n    }\n}\n","export class ToDoModel {\n    constructor() {\n        this._items = [];\n    }\n    set items(data) {\n        this._items = data;\n    }\n    get items() {\n        return this._items;\n    }\n    addItem(data) {\n        const uniqueId = Math.max(...this._items.map(item => Number(item.id))) + 1;\n        const newItem = { id: String(uniqueId), name: data };\n        this._items.push(newItem);\n        return newItem;\n    }\n    ;\n    removeItem(id) {\n        this._items = this._items.filter(item => item.id !== id);\n    }\n    editItem(id, name) {\n        const editedItem = this._items.find(item => item.id === id);\n        editedItem.name = name;\n    }\n    getItem(id) {\n        return this._items.find(item => item.id === id);\n    }\n}\n","export class Popup {\n    constructor(container) {\n        this.container = container;\n        if (!new.target) {\n            throw Error('Error: Incorrect invocation!');\n        }\n        this.closeButton = container.querySelector('.popup__close');\n        this._content = container.querySelector('.popup__content');\n        this.closeButton.addEventListener('click', this.close.bind(this));\n        this.container.addEventListener('click', this.close.bind(this));\n        this.container.querySelector('.popup__container').addEventListener('click', (event) => event.stopPropagation());\n    }\n    set content(value) {\n        this._content.replaceChildren(value);\n    }\n    open() {\n        this.container.classList.add('popup_is-opened');\n    }\n    close() {\n        this.container.classList.remove('popup_is-opened');\n        this.content = null;\n    }\n}\n","export class ItemPresenter {\n    constructor(model, formConstructor, viewPageContainer, viewItemConstructor, modal) {\n        this.model = model;\n        this.formConstructor = formConstructor;\n        this.viewPageContainer = viewPageContainer;\n        this.viewItemConstructor = viewItemConstructor;\n        this.modal = modal;\n        this.itemTemplate = document.querySelector('#todo-item-template');\n        this.formTemplate = document.querySelector('#todo-form-template');\n    }\n    init() {\n        this.todoForm = new this.formConstructor(this.formTemplate);\n        this.todoForm.setHandler(this.handleSubmitForm.bind(this));\n        this.todoForm.buttonText = 'Добавить';\n        this.todoForm.placeholder = 'Следующее дело';\n        this.viewPageContainer.formContainer = this.todoForm.render();\n        this.todoEditForm = new this.formConstructor(this.formTemplate);\n        this.todoEditForm.buttonText = 'Изменить';\n        this.todoEditForm.placeholder = 'Новое название';\n    }\n    handleSubmitForm(data) {\n        this.model.addItem(data);\n        this.renderView();\n        this.todoForm.clearValue();\n    }\n    handleSubmitEditForm(data, id) {\n        this.model.editItem(id, data);\n        this.renderView();\n        this.todoEditForm.clearValue();\n        this.modal.close();\n    }\n    handleCopyItem(item) {\n        const copyedItem = this.model.getItem(item.id);\n        this.model.addItem(copyedItem.name);\n        this.renderView();\n    }\n    handleDeleteItem(item) {\n        this.model.removeItem(item.id);\n        this.renderView();\n    }\n    handleEditItem(item) {\n        const editedItem = this.model.getItem(item.id);\n        this.todoEditForm.setValue(editedItem.name);\n        this.modal.content = this.todoEditForm.render();\n        this.todoEditForm.setHandler((data) => this.handleSubmitEditForm(data, item.id));\n        this.modal.open();\n    }\n    renderView() {\n        const itemList = this.model.items.map((item) => {\n            const todoItem = new this.viewItemConstructor(this.itemTemplate);\n            todoItem.setCopyHandler(this.handleCopyItem.bind(this));\n            todoItem.setDeleteHandler(this.handleDeleteItem.bind(this));\n            todoItem.setEditHandler(this.handleEditItem.bind(this));\n            const itemElement = todoItem.render(item);\n            return itemElement;\n        }).reverse();\n        this.viewPageContainer.todoContainer = itemList;\n    }\n}\n","export class Form {\n    constructor(formTemplate) {\n        this.formElement = formTemplate.content\n            .querySelector('.todos__form')\n            .cloneNode(true);\n        this.inputField = this.formElement.querySelector('.todo-form__input');\n        this.submitButton = this.formElement.querySelector('.todo-form__submit-btn');\n        this.formElement.addEventListener('submit', (evt) => {\n            evt.preventDefault();\n            this.handleFormSubmit(this.inputField.value);\n        });\n    }\n    setHandler(handleFormSubmit) {\n        this.handleFormSubmit = handleFormSubmit;\n    }\n    render() {\n        return this.formElement;\n    }\n    setValue(data) {\n        this.inputField.value = data;\n    }\n    getValue() {\n        return this.inputField.value;\n    }\n    clearValue() {\n        this.formElement.reset();\n    }\n    set buttonText(data) {\n        this.submitButton.textContent = data;\n    }\n    set placeholder(data) {\n        this.inputField.placeholder = data;\n    }\n}\n","export class Item {\n    constructor(template) {\n        this.itemElement = template.content.querySelector('.todo-item').cloneNode(true);\n        this.title = this.itemElement.querySelector('.todo-item__text');\n        this.deleteButton = this.itemElement.querySelector('.todo-item__del');\n        this.copyButton = this.itemElement.querySelector('.todo-item__copy');\n        this.editButton = this.itemElement.querySelector('.todo-item__edit');\n    }\n    set id(value) {\n        this._id = value;\n    }\n    get id() {\n        return this._id || '';\n    }\n    set name(value) {\n        this.title.textContent = value;\n    }\n    get name() {\n        return this.title.textContent || '';\n    }\n    setDeleteHandler(handleDeleteItem) {\n        this.handleDeleteItem = handleDeleteItem;\n        this.deleteButton.addEventListener('click', (evt) => {\n            this.handleDeleteItem(this);\n        });\n    }\n    setCopyHandler(handleCopyItem) {\n        this.handleCopyItem = handleCopyItem;\n        this.copyButton.addEventListener('click', (evt) => {\n            this.handleCopyItem(this);\n        });\n    }\n    setEditHandler(handleEditItem) {\n        this.handleEditItem = handleEditItem;\n        this.editButton.addEventListener('click', (evt) => {\n            this.handleEditItem(this);\n        });\n    }\n    render(item) {\n        this.name = item.name;\n        this.id = item.id;\n        return this.itemElement;\n    }\n}\n"],"names":["contentElement","document","querySelector","popupElement","itemContainer","Page","constructor","container","this","_formContainer","_todoContainer","todoContainer","items","replaceChildren","formContainer","formElement","innerHTML","todoArray","ToDoModel","_items","data","addItem","uniqueId","Math","max","map","item","Number","id","newItem","String","name","push","removeItem","filter","editItem","find","getItem","modal","Popup","Error","closeButton","_content","addEventListener","close","bind","event","stopPropagation","content","value","open","classList","add","remove","itemPresenter","ItemPresenter","model","formConstructor","viewPageContainer","viewItemConstructor","itemTemplate","formTemplate","init","todoForm","setHandler","handleSubmitForm","buttonText","placeholder","render","todoEditForm","renderView","clearValue","handleSubmitEditForm","handleCopyItem","copyedItem","handleDeleteItem","handleEditItem","editedItem","setValue","itemList","todoItem","setCopyHandler","setDeleteHandler","setEditHandler","reverse","Form","cloneNode","inputField","submitButton","evt","preventDefault","handleFormSubmit","getValue","reset","textContent","Item","template","itemElement","title","deleteButton","copyButton","editButton","_id"],"sourceRoot":""}